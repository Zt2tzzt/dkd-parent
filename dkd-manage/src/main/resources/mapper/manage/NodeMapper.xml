<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dkd.manage.mapper.NodeMapper">

    <resultMap type="Node" id="NodeResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="address" column="address"/>
        <result property="businessDistrictType" column="business_district_type"/>
        <result property="regionId" column="region_id"/>
        <result property="partnerId" column="partner_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="createBy" column="create_by"/>
        <result property="updateBy" column="update_by"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <resultMap id="NodeVOResult" type="NodeVO">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="address" column="address"/>
        <result property="businessDistrictType" column="business_district_type"/>
        <result property="regionId" column="region_id"/>
        <result property="partnerId" column="partner_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="createBy" column="create_by"/>
        <result property="updateBy" column="update_by"/>
        <result property="remark" column="remark"/>
        <result property="vmCount" column="vm_count"/>
        <association property="region" javaType="Region" column="region_id"
                     select="com.dkd.manage.mapper.RegionMapper.selectRegionById"/>
        <association property="partner" javaType="Partner" column="partner_id"
                     select="com.dkd.manage.mapper.PartnerMapper.selectPartnerById"/>
    </resultMap>

    <sql id="selectNodeVo">
        SELECT id,
               name,
               address,
               business_district_type,
               region_id,
               partner_id,
               create_time,
               update_time,
               create_by,
               update_by,
               remark
        FROM node
    </sql>

    <select id="selectNodeList" parameterType="Node" resultMap="NodeResult">
        <include refid="selectNodeVo"/>
        <where>
            <if test="name != null  and name != ''">and name like concat('%', #{name}, '%')</if>
            <if test="regionId != null ">and region_id = #{regionId}</if>
            <if test="partnerId != null ">and partner_id = #{partnerId}</if>
        </where>
    </select>

    <select id="selectNodeById" parameterType="Long" resultMap="NodeResult">
        <include refid="selectNodeVo"/>
        where id = #{id}
    </select>

    <select id="selectNodeVOList" resultMap="NodeVOResult">
        SELECT n.id, n.name, n.address, n.business_district_type, n.region_id, n.partner_id, n.create_time,
        n.update_time, n.create_by, n.update_by, n.remark,
        COUNT(vm.id) AS vm_count -- 统计每个点位的设备数量
        FROM node n
        LEFT JOIN vending_machine vm ON n.id = vm.node_id -- 连接设备表
        <where>
            <if test="name != null  and name != ''">and n.name like concat('%', #{name}, '%')</if>
            <if test="regionId != null ">and n.region_id = #{regionId}</if>
            <if test="partnerId != null ">and n.partner_id = #{partnerId}</if>
        </where>
        GROUP BY n.id
    </select>

    <insert id="insertNode" parameterType="Node" useGeneratedKeys="true" keyProperty="id">
        insert into node
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="address != null and address != ''">address,</if>
            <if test="businessDistrictType != null">business_district_type,</if>
            <if test="regionId != null">region_id,</if>
            <if test="partnerId != null">partner_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="address != null and address != ''">#{address},</if>
            <if test="businessDistrictType != null">#{businessDistrictType},</if>
            <if test="regionId != null">#{regionId},</if>
            <if test="partnerId != null">#{partnerId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateNode" parameterType="Node">
        update node
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="address != null and address != ''">address = #{address},</if>
            <if test="businessDistrictType != null">business_district_type = #{businessDistrictType},</if>
            <if test="regionId != null">region_id = #{regionId},</if>
            <if test="partnerId != null">partner_id = #{partnerId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteNodeById" parameterType="Long">
        DELETE
        FROM node
        WHERE id = #{id}
    </delete>

    <delete id="deleteNodeByIds" parameterType="String">
        delete from node where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>